"use strict";(self.webpackChunkapp=self.webpackChunkapp||[]).push([[150],{4100:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"blockchain/Introduction","title":"Introduction","description":"An introductory overview of blockchain technology, decentralization, and the consensus problem.","source":"@site/docs/blockchain/Introduction.md","sourceDirName":"blockchain","slug":"/blockchain/Introduction","permalink":"/Learning/docs/blockchain/Introduction","draft":false,"unlisted":false,"editUrl":"https://github.com/robertovicario/Learning/docs/blockchain/Introduction.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"description":"An introductory overview of blockchain technology, decentralization, and the consensus problem."},"sidebar":"tutorialSidebar","previous":{"title":"Blockchain","permalink":"/Learning/docs/category/blockchain"}}');var i=t(4848),o=t(8453);const r={sidebar_position:1,description:"An introductory overview of blockchain technology, decentralization, and the consensus problem."},a="Introduction",l={},c=[{value:"\ud83d\udd17 Blockchain",id:"-blockchain",level:2},{value:"\ud83e\uddf1 Features",id:"-features",level:3},{value:"\ud83c\udf10 Decentralization",id:"-decentralization",level:2},{value:"\ud83c\udfdb\ufe0f Centralized vs Decentralized",id:"\ufe0f-centralized-vs-decentralized",level:3},{value:"\ud83e\udde9 Key Components",id:"-key-components",level:3},{value:"\ud83e\udde0 The Consensus Problem",id:"-the-consensus-problem",level:2},{value:"\ud83d\udd04 State Machine Replication (SMR)",id:"-state-machine-replication-smr",level:2},{value:"\u2699\ufe0f Working",id:"\ufe0f-working",level:3}];function d(e){const n={admonition:"admonition",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"introduction",children:"Introduction"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"-blockchain",children:"\ud83d\udd17 Blockchain"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"Blockchain"})," is a special kind of database that stores information in a chain of blocks. Each block contains a list of transactions, and these blocks are linked together in the order they were added\u2014like a digital ledger."]}),"\n",(0,i.jsx)(n.h3,{id:"-features",children:"\ud83e\uddf1 Features"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Decentralized:"})," No single person or company controls it. It's maintained by a network of computers (called nodes) around the world."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Immutable:"})," Once data is added to the blockchain, it's almost impossible to change. This creates a permanent, tamper-proof record."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Transparent:"})," Everyone on the network can view the blockchain. It's public and verifiable (in most cases)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Secure:"})," It uses cryptography to keep transactions safe and to ensure that only authorized changes are made."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"-decentralization",children:"\ud83c\udf10 Decentralization"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"Decentralization"})," means that control and decision-making aren't held by a single entity, like a company or government. Instead, power is distributed across a network of independent participants."]}),"\n",(0,i.jsx)(n.h3,{id:"\ufe0f-centralized-vs-decentralized",children:"\ud83c\udfdb\ufe0f Centralized vs Decentralized"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Feature"}),(0,i.jsx)(n.th,{children:"Centralized System"}),(0,i.jsx)(n.th,{children:"Decentralized System"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Control"}),(0,i.jsx)(n.td,{children:"One authority"}),(0,i.jsx)(n.td,{children:"Shared among network participants"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Risk of Failure"}),(0,i.jsx)(n.td,{children:"Single point of failure"}),(0,i.jsx)(n.td,{children:"Highly resilient"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Censorship"}),(0,i.jsx)(n.td,{children:"Possible"}),(0,i.jsx)(n.td,{children:"Very hard to enforce"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Transparency"}),(0,i.jsx)(n.td,{children:"Limited or none"}),(0,i.jsx)(n.td,{children:"Often fully open"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Speed"}),(0,i.jsx)(n.td,{children:"Usually faster"}),(0,i.jsx)(n.td,{children:"Sometimes slower"})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"-key-components",children:"\ud83e\udde9 Key Components"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Nodes:"})," Independent computers that keep a copy of the entire blockchain and help validate transactions."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Consensus Mechanisms:"})," Rules that help the network agree on what's true."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Peer-to-Peer Networking:"})," Nodes talk directly to each other, rather than through a central server."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"-the-consensus-problem",children:"\ud83e\udde0 The Consensus Problem"}),"\n",(0,i.jsxs)(n.p,{children:["In decentralized systems, no single person or computer is in charge, so how do all the independent nodes agree on what\u2019s true? That\u2019s the ",(0,i.jsx)(n.em,{children:"Consensus Problem"}),":"]}),"\n",(0,i.jsx)(n.admonition,{title:"Problem",type:"warning",children:(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"How can a group of participants, who don't fully trust each other, agree on a single version of the truth?"})})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.p,{children:"\ud83d\udd04 State Machine Replication (SMR)"}),"\n",(0,i.jsx)(n.p,{children:"..."}),"\n",(0,i.jsxs)(n.p,{children:["Here\u2019s a natural continuation that adds a ",(0,i.jsx)(n.strong,{children:"State Machine Replication (SMR)"})," section under the ",(0,i.jsx)(n.strong,{children:"Consensus Problem"})," heading:"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"-state-machine-replication-smr",children:"\ud83d\udd04 State Machine Replication (SMR)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"State Machine Replication"})," is a foundational technique used to solve the ",(0,i.jsx)(n.em,{children:"Consensus Problem"})," in distributed systems. It ensures that multiple nodes stay in sync, even if some fail or act maliciously."]}),"\n",(0,i.jsx)(n.h3,{id:"\ufe0f-working",children:"\u2699\ufe0f Working"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Deterministic Machines:"})," Each node runs the same state machine\u2014a program that, given the same input, always produces the same output and transitions to the same next state."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Same Inputs, Same Order:"})," Nodes must agree on the exact same sequence of inputs (typically transactions)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Consensus Algorithm:"})," A protocol (like Paxos, Raft, or a blockchain consensus like Proof of Work) ensures that all honest nodes agree on the input order."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"If all nodes receive and process the same inputs in the same order, they'll all end up in the same state replicating the same behavior."}),"\n",(0,i.jsx)(n.p,{children:"\u2022 Two kinds of parties:\n\u2022 Nodes\n\u2022 Run the program and a Consensus protocol. For keeping them in sync\n\u2022 Clients\n\u2022 Don\u2019t run the Consensus protocol but read/write the state\n\u2022 Transactions\n\u2022 Messages among clients and nodes\n\u2022 e.g. currency transfer from an account to the other\n\u2022 Function call to a smart contract\n\u2022 What a node is responsible of doing?\n\u2022 Each node maintains a local, append-only data structure called history\n\u2022 The history stores transactions that have been submitted previously to the\nnode\n\u2022 History: local, ordered sequence of transactions maintained by a node\n\u2022 Desideratum: nodes must have identical histories\n\u2022 This is achieved by keeping them in sync, despite failures, delays, attacks\n\u2022 Protocol:\nProcedure that is run locally by each (honest) node\n\u2022 The procedure is event-driven: local computation steps + send/receive msgs\nto/from other nodes/clients\n\u2022 Goals:\nLiveness: something good eventually happens (more on this later)\nSafety: bad things never happen\nConsistency: all histories are composed by the same Txs sequence\n\u2022 Weaker notion of Consistency:\n\u2022 Either all local histories have same Tx ordering or some local histories may be\nprefixes of other histories\n\u2022 Nodes may not execute in lockstep and some of them may \u2018lag behind\u2019\n\u2022 No two local histories order two di\ufb00erent transactions in opposite way"})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var s=t(6540);const i={},o=s.createContext(i);function r(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);